/**
 * InventoryAPI
 * Orkiv Inventory API client 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package Inventory_client;

import Inventory_java_client.ApiException;
import Inventory_client.InventoryGroup;
import Inventory_client.Error;
import Inventory_client.Response;
import Inventory_client.Dictionary;
import Inventory_client.Category;
import Inventory_client.Item;
import java.math.BigDecimal;
import Inventory_client.Order;
import Inventory_client.Service;
import Inventory_client.EventRequest;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void allGetTest() throws ApiException {
        // List<InventoryGroup> response = api.allGet();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void categoriesDeleteTest() throws ApiException {
        String id = null;
        // Response response = api.categoriesDelete(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void categoriesPostTest() throws ApiException {
        Dictionary query = null;
        // List<Category> response = api.categoriesPost(query);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * If no ID is specified a new category will be created!
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void categoriesPutTest() throws ApiException {
        String id = null;
        Category category = null;
        // Category response = api.categoriesPut(id, category);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void itemAddPostTest() throws ApiException {
        Item item = null;
        // Item response = api.itemAddPost(item);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void itemAddbulkPostTest() throws ApiException {
        List<Item> items = null;
        // Response response = api.itemAddbulkPost(items);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void itemDeleteTest() throws ApiException {
        String id = null;
        // Response response = api.itemDelete(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void itemPutTest() throws ApiException {
        String id = null;
        Dictionary item = null;
        // Response response = api.itemPut(id, item);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void itemsCountPostTest() throws ApiException {
        Dictionary query = null;
        // BigDecimal response = api.itemsCountPost(query);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void itemsPostTest() throws ApiException {
        Dictionary query = null;
        // List<Item> response = api.itemsPost(query);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void itemsallfieldsPostTest() throws ApiException {
        Dictionary query = null;
        // List<Dictionary> response = api.itemsallfieldsPost(query);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void ordersPostTest() throws ApiException {
        Dictionary query = null;
        // List<Order> response = api.ordersPost(query);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void queryPostTest() throws ApiException {
        BigDecimal page = null;
        String categoryid = null;
        String sort = null;
        String search = null;
        BigDecimal minprice = null;
        BigDecimal maxprice = null;
        Dictionary query = null;
        // List<Item> response = api.queryPost(page, categoryid, sort, search, minprice, maxprice, query);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void queryallfieldsPostTest() throws ApiException {
        BigDecimal page = null;
        String categoryid = null;
        String sort = null;
        String search = null;
        BigDecimal minprice = null;
        BigDecimal maxprice = null;
        Dictionary query = null;
        // List<Dictionary> response = api.queryallfieldsPost(page, categoryid, sort, search, minprice, maxprice, query);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void servicesDeleteTest() throws ApiException {
        String id = null;
        // Response response = api.servicesDelete(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void servicesGetTest() throws ApiException {
        // List<Service> response = api.servicesGet();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void servicesPostTest() throws ApiException {
        Service service = null;
        // Service response = api.servicesPost(service);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void servicesPutTest() throws ApiException {
        String id = null;
        Service service = null;
        // Response response = api.servicesPut(id, service);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void writeDeleteTest() throws ApiException {
        String id = null;
        // Response response = api.writeDelete(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Will ovveride the current event of the specified service.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void writePostTest() throws ApiException {
        EventRequest eventRequest = null;
        // Response response = api.writePost(eventRequest);

        // TODO: test validations
    }
    
}
